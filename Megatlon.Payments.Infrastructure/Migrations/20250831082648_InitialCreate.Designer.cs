// <auto-generated />
using System;
using Megatlon.Payments.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Megatlon.Payments.Infrastructure.Migrations
{
    [DbContext(typeof(PaymentsDbContext))]
    [Migration("20250831082648_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Megatlon.Payments.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Megatlon.Payments.Domain.Entities.MedioPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediosPago");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EFEC",
                            Descripcion = "Pago en efectivo",
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CHEQ",
                            Descripcion = "Pago con Cheque",
                            Nombre = "Cheque"
                        },
                        new
                        {
                            Id = 3,
                            Code = "TARJ",
                            Descripcion = "Pago con Tarjeta crédito/débito",
                            Nombre = "Tarjeta"
                        });
                });

            modelBuilder.Entity("Megatlon.Payments.Domain.Entities.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ISOCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Monedas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Pesos argentinos",
                            ISOCode = "ARS",
                            Nombre = "Peso Argentino"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Dólar estadounidense",
                            ISOCode = "USD",
                            Nombre = "Dólar"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Pesos uruguayos",
                            ISOCode = "UYU",
                            Nombre = "Peso Uruguayo"
                        });
                });

            modelBuilder.Entity("Megatlon.Payments.Domain.Entities.Pago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalReference")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("TEXT");

                    b.Property<int>("MedioPagoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonedaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MedioPagoId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("Source", "ExternalReference")
                        .IsUnique();

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Megatlon.Payments.Domain.Entities.Pago", b =>
                {
                    b.HasOne("Megatlon.Payments.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Megatlon.Payments.Domain.Entities.MedioPago", "MedioPago")
                        .WithMany()
                        .HasForeignKey("MedioPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Megatlon.Payments.Domain.Entities.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("MedioPago");

                    b.Navigation("Moneda");
                });
#pragma warning restore 612, 618
        }
    }
}
